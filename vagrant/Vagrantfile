# -*- mode: ruby -*-
# vi:set ft=ruby sw=2 ts=2 sts=2:

# Define the number of master and worker nodes
# If this number is changed, remember to update setup-hosts.sh script with the new hosts IP details in /etc/hosts of each VM.
NUM_MASTER_NODE = 1
NUM_WORKER_NODE = 2
NUM_DB_NODE = 1
NUM_GATEWAY_NODE = 1
NUM_AUTOMATION_NODE = 1

IP_NW = "192.168.56."
MASTER_IP_START = 1
NODE_IP_START = 10
DB_IP_START = 20
GATEWAY_IP_START = 30
AUTOMATION_IP_START = 40
GIT_IP_START = 50

MASTER_FORWARD_PORT = 2710
WORKER_FORWARD_PORT = 2720
DB_FORWARD_PORT = 2730
GATEWAY_FORWARD_PORT = 2740
AUTOMATION_FORWARD_PORT = 2750
GIT_FORWARD_PORT = 2760


# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "base"
  config.vm.box = "ubuntu/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Provision Master Nodes
  (1..NUM_MASTER_NODE).each do |i|
      config.vm.define "kubemaster0#{i}" do |node|
        # Name shown in the GUI
        node.vm.provider "virtualbox" do |vb|
            vb.name = "kubemaster0#{i}"
            vb.memory = 2048
            vb.cpus = 2
        end
        node.vm.hostname = "kubemaster0#{i}"
        node.vm.network :private_network, ip: IP_NW + "#{MASTER_IP_START + i}"
        node.vm.network "forwarded_port", guest: 22, host: "#{MASTER_FORWARD_PORT + i}"

        node.vm.provision "setup-hosts", :type => "shell", :path => "ubuntu/vagrant/setup-hosts.sh" do |s|
          s.args = ["enp0s8"]
        end

        node.vm.provision "setup-dns", type: "shell", :path => "ubuntu/update-dns.sh"
        node.vm.provision "setup-ssh", type: "shell", :path => "ubuntu/update-ssh.sh"
      end
  end


  # Provision Worker Nodes
  (1..NUM_WORKER_NODE).each do |i|
    config.vm.define "kubenode0#{i}" do |node|
        node.vm.provider "virtualbox" do |vb|
            vb.name = "kubenode0#{i}"
            vb.memory = 2048
            vb.cpus = 2
        end
        node.vm.hostname = "kubenode0#{i}"
        node.vm.network :private_network, ip: IP_NW + "#{NODE_IP_START + i}"
                node.vm.network "forwarded_port", guest: 22, host: "#{WORKER_FORWARD_PORT + i}"

        node.vm.provision "setup-hosts", :type => "shell", :path => "ubuntu/vagrant/setup-hosts.sh" do |s|
          s.args = ["enp0s8"]
        end

        node.vm.provision "setup-dns", type: "shell", :path => "ubuntu/update-dns.sh"
        node.vm.provision "setup-ssh", type: "shell", :path => "ubuntu/update-ssh.sh"
    end
  end

  (1..NUM_DB_NODE).each do |i|
    config.vm.define "database0#{i}" do |node|
        node.vm.provider "virtualbox" do |vb|
            vb.name = "database0#{i}"
            vb.memory = 2048
            vb.cpus = 2
        end
        node.vm.hostname = "database0#{i}"
        node.vm.network :private_network, ip: IP_NW + "#{DB_IP_START + i}"
                node.vm.network "forwarded_port", guest: 22, host: "#{DB_FORWARD_PORT + i}"

        node.vm.provision "setup-hosts", :type => "shell", :path => "ubuntu/vagrant/setup-hosts.sh" do |s|
          s.args = ["enp0s8"]
        end

        node.vm.provision "setup-dns", type: "shell", :path => "ubuntu/update-dns.sh"
        node.vm.provision "setup-ssh", type: "shell", :path => "ubuntu/update-ssh.sh"
    end
  end

  (1..NUM_GATEWAY_NODE).each do |i|
    config.vm.define "gateway0#{i}" do |node|
        node.vm.provider "virtualbox" do |vb|
            vb.name = "gateway0#{i}"
            vb.memory = 2048
            vb.cpus = 2
        end
        node.vm.hostname = "gateway0#{i}"
        node.vm.network :private_network, ip: IP_NW + "#{GATEWAY_IP_START + i}"
                node.vm.network "forwarded_port", guest: 22, host: "#{GATEWAY_FORWARD_PORT + i}"

        node.vm.provision "setup-hosts", :type => "shell", :path => "ubuntu/vagrant/setup-hosts.sh" do |s|
          s.args = ["enp0s8"]
        end

        node.vm.provision "setup-dns", type: "shell", :path => "ubuntu/update-dns.sh"
        node.vm.provision "setup-ssh", type: "shell", :path => "ubuntu/update-ssh.sh"
    end
  end

  (1..NUM_AUTOMATION_NODE).each do |i|
    config.vm.define "automation0#{i}" do |node|

        node.vm.box = "centos/stream8"

        node.vm.provider "virtualbox" do |vb|
            vb.name = "automation0#{i}"
            vb.memory = 2048
            vb.cpus = 2
        end
        node.vm.hostname = "automation0#{i}"
        node.vm.network :private_network, ip: IP_NW + "#{AUTOMATION_IP_START + i}"
                node.vm.network "forwarded_port", guest: 22, host: "#{AUTOMATION_FORWARD_PORT + i}"

        # Post-configuration bash script, runs as root after VM creation
        $post_config = <<-'SCRIPT'
        # Install EPEL
        yum -y install epel-release
        # Update Linux
        yum -y update
        # Install and enable Graphical Desktop
        # echo ""
        # echo "Installing Gnome Desktop"
        # echo "------------------------"
        # yum -y install '@^GNOME Desktop'
        # systemctl isolate graphical.target
        # systemctl set-default graphical.target
        SCRIPT

        # Run post_config script
        node.vm.provision "shell", inline: $post_config
    end
  end

  config.vm.define "git-server" do |node|
      node.vm.provider "virtualbox" do |vb|
          vb.name = "git-server"
          vb.memory = 8196
          vb.cpus = 2
      end
      node.vm.hostname = "git-server"
      node.vm.network :private_network, ip: IP_NW + "#{GIT_IP_START + 1}"
              node.vm.network "forwarded_port", guest: 22, host: "#{GIT_FORWARD_PORT + 1}"

      node.vm.provision "setup-hosts", :type => "shell", :path => "ubuntu/vagrant/setup-hosts.sh" do |s|
        s.args = ["enp0s8"]
      end

      node.vm.provision "setup-dns", type: "shell", :path => "ubuntu/update-dns.sh"
      node.vm.provision "setup-ssh", type: "shell", :path => "ubuntu/update-ssh.sh"
  end

end
